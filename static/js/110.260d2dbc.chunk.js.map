{"version":3,"file":"static/js/110.260d2dbc.chunk.js","mappings":"iRAEaA,E,QAAMC,GAAAA,IAAH,wE,SC+ChB,EA3Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGACuBC,EAAAA,EAAAA,IAAoBN,GAD3C,OACOO,EADP,OAECH,EAAQG,EAAQJ,MAFjB,0CAAD,EAID,GAAE,CAACH,KAGF,SAACQ,EAAA,EAAD,WACIL,EAAKM,OAAS,GACd,oCAEA,SAACD,EAAA,EAAD,CACEE,GAAG,KACHC,QAAQ,OACRC,oBAAoB,iBACpBC,QAAQ,OAJV,SAMGV,EAAKW,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACrB,UAACX,EAAA,EAAD,CAAKE,GAAG,KAAcU,MAAM,QAA5B,WACE,SAACtB,EAAD,CACEuB,IACEF,EACI,kCAAoCA,EACpC,uDAENG,IAAKL,KAEP,wBACE,uBAAIA,OAEN,uCAAeC,OAZCF,EADG,OAoBhC,C,8EClCYR,GAAMT,EAAAA,EAAAA,IAAO,MAAPA,CACjBwB,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,4MCpBFC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACED,IAAAA,IAAU,qBAAsB,CACzDE,OAAQ,CACNC,QAASC,sCAHY,cACnBC,EADmB,yBAMlBA,EAAaC,KAAKC,SANA,2CAAH,qDASXC,EAAkB,mCAAG,WAAMC,GAAN,uFACNT,IAAAA,IAAU,eAAgB,CAClDE,OAAQ,CACNC,QAASC,mCACTM,MAAOD,EACPE,SAAU,QACVC,KAAM,EACNC,eAAe,KAPa,cAC1BC,EAD0B,yBAUzBA,EAAYR,KAAKC,SAVQ,2CAAH,sDAalBQ,EAAY,mCAAG,WAAM/B,GAAN,uFACDgB,IAAAA,IAAA,gBAAmBhB,GAAM,CAChDkB,OAAQ,CACNC,QAASC,mCACTO,SAAU,WAJY,cACpBK,EADoB,yBAOnBA,EAAWV,MAPQ,2CAAH,sDAUZhC,EAAmB,mCAAG,WAAMU,GAAN,uFACRgB,IAAAA,IAAA,gBAAmBhB,EAAnB,YAAiC,CACxDkB,OAAQ,CACNC,QAASC,mCACTO,SAAU,WAJmB,cAC3BK,EAD2B,yBAO1BA,EAAWV,MAPe,2CAAH,sDAUnBW,EAAmB,mCAAG,WAAOjC,GAAP,4FAAW4B,EAAX,+BAAkB,EAAlB,SACRZ,IAAAA,IAAA,gBAAmBhB,EAAnB,YAAiC,CACxDkB,OAAQ,CACNC,QAASC,mCACTO,SAAU,QACVC,KAAAA,KAL6B,cAC3BI,EAD2B,yBAQ1BA,EAAWV,KAAKC,SARU,2CAAH,qD","sources":["components/Cast/CastStyled.js","components/Cast/Cast.js","components/Styled/Box.js","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  margin-bottom: 10px;\n  border-radius: 10px;\n`;","import { Box } from 'components/Styled/Box';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCreditsById } from 'services/movieApi';\nimport { Img } from './CastStyled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const credits = await getMovieCreditsById(movieId);\n      setCast(credits.cast);\n    })();\n  }, [movieId]);\n\n  return (\n    <Box>\n      {!cast.length > 0 ? (\n        <p>No cast</p>\n      ) : (\n        <Box\n          as=\"ul\"\n          display=\"grid\"\n          gridTemplateColumns=\"repeat(5, 1fr)\"\n          gridGap=\"10px\"\n        >\n          {cast.slice(0, 20).map(({ id, name, character, profile_path }) => (\n            <Box as=\"li\" key={id} width=\"200px\">\n              <Img\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : 'https://dummyimage.com/200x300/000/fff&text=No+photo'\n                }\n                alt={name}\n              />\n              <p>\n                <b>{name}</b>\n              </p>\n              <p>Character: {character}</p>\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Cast;","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position\n);","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const trendingData = await axios.get('trending/movie/day', {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n    },\n  });\n  return trendingData.data.results;\n};\n\nexport const searchMoviesByName = async movie => {\n  const foundMovies = await axios.get('search/movie', {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      query: movie,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return foundMovies.data.results;\n};\n\nexport const getMovieById = async id => {\n  const foundMovie = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getMovieCreditsById = async id => {\n  const foundMovie = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getReviewsByMovieId = async (id, page = 1) => {\n  const foundMovie = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      language: 'en-US',\n      page,\n    },\n  });\n  return foundMovie.data.results;\n};"],"names":["Img","styled","movieId","useParams","useState","cast","setCast","useEffect","getMovieCreditsById","credits","Box","length","as","display","gridTemplateColumns","gridGap","slice","map","id","name","character","profile_path","width","src","alt","color","space","layout","flexbox","grid","background","border","shadow","position","axios","getTrending","params","api_key","process","trendingData","data","results","searchMoviesByName","movie","query","language","page","include_adult","foundMovies","getMovieById","foundMovie","getReviewsByMovieId"],"sourceRoot":""}