{"version":3,"file":"static/js/785.acfab4cb.chunk.js","mappings":"gRAKaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,0FACCD,EADD,UACkBE,EAAAA,EAAAA,IAAoBN,GADtC,4EAAD,EAGD,GAAE,CAACA,KAGF,SAAC,IAAD,UACIG,GAGA,wBACGA,EAAQI,KACP,YAOO,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,OAKI,IAJJC,eAAkBC,EAId,EAJcA,OAClBC,GAGI,EAJsBC,YAItB,EAHJD,SACAE,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,2BACE,0BACE,mCADF,IACkBN,MAElB,0BACE,mCADF,IACkBE,MAElB,0BACE,sCADF,IACqBG,MAErB,wBACE,sCAEF,uBAAIF,KACJ,0BACE,yCADF,IACwBG,OAfjBP,EAmBZ,OAhCL,uCAsCP,C,8EC3CYQ,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,oLCpBFC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACED,IAAAA,IAAU,qBAAsB,CACzDE,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,WAHA,cACnBC,EADmB,yBAMlBA,EAAaC,KAAKC,SANA,2CAAH,qDAsBXC,EAAY,mCAAG,WAAM5B,GAAN,uFACDmB,IAAAA,IAAA,gBAAmBnB,GAAM,CAChDqB,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,WAJY,cACpBC,EADoB,yBAOnBA,EAAWJ,MAPQ,2CAAH,sDAUZK,EAAmB,mCAAG,WAAM/B,GAAN,uFACRmB,IAAAA,IAAA,gBAAmBnB,EAAnB,YAAiC,CACxDqB,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,WAJmB,cAC3BC,EAD2B,yBAO1BA,EAAWJ,MAPe,2CAAH,sDAUnB5B,EAAmB,mCAAG,WAAOE,GAAP,4FAAWgC,EAAX,+BAAkB,EAAlB,SACRb,IAAAA,IAAA,gBAAmBnB,EAAnB,YAAiC,CACxDqB,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,QACVG,KAAAA,KAL6B,cAC3BF,EAD2B,yBAQ1BA,EAAWJ,KAAKC,SARU,2CAAH,qD","sources":["components/Reviews/Reviews.js","components/Styled/Box.js","services/movieApi.jsx"],"sourcesContent":["import { Box } from '../Styled/Box';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsByMovieId } from '../../services/movieApi';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      setReviews(await getReviewsByMovieId(movieId));\n    })();\n  }, [movieId]);\n\n  return (\n    <Box>\n      {!reviews ? (\n        <p>No reviews</p>\n      ) : (\n        <ul>\n          {reviews.map(\n            ({\n              id,\n              author,\n              author_details: { rating, avatar_path },\n              content,\n              created_at,\n              updated_at,\n            }) => {\n              return (\n                <li key={id}>\n                  <p>\n                    <b>Author:</b> {author}\n                  </p>\n                  <p>\n                    <b>Rating:</b> {rating}\n                  </p>\n                  <p>\n                    <b>Created at</b> {created_at}\n                  </p>\n                  <p>\n                    <b>Review:</b>\n                  </p>\n                  <p>{content}</p>\n                  <p>\n                    <b>Last updated:</b> {updated_at}\n                  </p>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      )}\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position\n);","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const trendingData = await axios.get('trending/movie/day', {\n    params: {\n      api_key: process.env.API_KEY,\n    },\n  });\n  return trendingData.data.results;\n};\n\nexport const searchMoviesByName = async movie => {\n  const foundMovies = await axios.get('search/movie', {\n    params: {\n      api_key: process.env.API_KEY,\n      query: movie,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return foundMovies.data.results;\n};\n\nexport const getMovieById = async id => {\n  const foundMovie = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getMovieCreditsById = async id => {\n  const foundMovie = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getReviewsByMovieId = async (id, page = 1) => {\n  const foundMovie = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n      page,\n    },\n  });\n  return foundMovie.data.results;\n};"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsByMovieId","map","id","author","author_details","rating","content","avatar_path","created_at","updated_at","Box","styled","color","space","layout","flexbox","grid","background","border","shadow","position","axios","getTrending","params","api_key","process","API_KEY","trendingData","data","results","getMovieById","language","foundMovie","getMovieCreditsById","page"],"sourceRoot":""}