{"version":3,"file":"static/js/541.e595cbc2.chunk.js","mappings":"6QAKaA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGACuBC,EAAAA,EAAAA,IAAoBN,GAD3C,OACOO,EADP,OAECH,EAAQG,EAAQJ,MAFjB,0CAAD,EAID,GAAE,CAACH,KAGF,SAAC,IAAD,CACEQ,GAAG,KACHC,QAAQ,OACRC,oBAAoB,iBACpBC,QAAQ,OAJV,SAMGR,GACCA,EAAKS,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACpB,UAAC,IAAD,CAAKT,GAAG,KAAcU,MAAM,QAA5B,WACE,gBACEC,IACEF,EACI,kCAAoCA,EACpC,uDAENG,IAAKL,KAEP,uBAAIA,KACJ,uCAAeC,OAVCF,EADE,KAgB7B,C,8EC1BYO,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,oLCpBFC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACED,IAAAA,IAAU,qBAAsB,CACzDE,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,WAHA,cACnBC,EADmB,yBAMlBA,EAAaC,KAAKC,SANA,2CAAH,qDAsBXC,EAAY,mCAAG,WAAM3B,GAAN,uFACDkB,IAAAA,IAAA,gBAAmBlB,GAAM,CAChDoB,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,WAJY,cACpBC,EADoB,yBAOnBA,EAAWJ,MAPQ,2CAAH,sDAUZjC,EAAmB,mCAAG,WAAMQ,GAAN,uFACRkB,IAAAA,IAAA,gBAAmBlB,EAAnB,YAAiC,CACxDoB,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,WAJmB,cAC3BC,EAD2B,yBAO1BA,EAAWJ,MAPe,2CAAH,sDAUnBK,EAAmB,mCAAG,WAAO9B,GAAP,4FAAW+B,EAAX,+BAAkB,EAAlB,SACRb,IAAAA,IAAA,gBAAmBlB,EAAnB,YAAiC,CACxDoB,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,QACVG,KAAAA,KAL6B,cAC3BF,EAD2B,yBAQ1BA,EAAWJ,KAAKC,SARU,2CAAH,qD","sources":["components/Cast/Cast.js","components/Styled/Box.js","services/movieApi.jsx"],"sourcesContent":["import { Box } from '../Styled/Box';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCreditsById } from '../../services/movieApi';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const credits = await getMovieCreditsById(movieId);\n      setCast(credits.cast);\n    })();\n  }, [movieId]);\n\n  return (\n    <Box\n      as=\"ul\"\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(5, 1fr)\"\n      gridGap=\"10px\"\n    >\n      {cast &&\n        cast.slice(0, 20).map(({ id, name, character, profile_path }) => (\n          <Box as=\"li\" key={id} width=\"200px\">\n            <img\n              src={\n                profile_path\n                  ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                  : 'https://dummyimage.com/200x300/000/fff&text=No+photo'\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </Box>\n        ))}\n    </Box>\n  );\n};","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position\n);","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const trendingData = await axios.get('trending/movie/day', {\n    params: {\n      api_key: process.env.API_KEY,\n    },\n  });\n  return trendingData.data.results;\n};\n\nexport const searchMoviesByName = async movie => {\n  const foundMovies = await axios.get('search/movie', {\n    params: {\n      api_key: process.env.API_KEY,\n      query: movie,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return foundMovies.data.results;\n};\n\nexport const getMovieById = async id => {\n  const foundMovie = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getMovieCreditsById = async id => {\n  const foundMovie = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getReviewsByMovieId = async (id, page = 1) => {\n  const foundMovie = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n      page,\n    },\n  });\n  return foundMovie.data.results;\n};"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","getMovieCreditsById","credits","as","display","gridTemplateColumns","gridGap","slice","map","id","name","character","profile_path","width","src","alt","Box","styled","color","space","layout","flexbox","grid","background","border","shadow","position","axios","getTrending","params","api_key","process","API_KEY","trendingData","data","results","getMovieById","language","foundMovie","getReviewsByMovieId","page"],"sourceRoot":""}