{"version":3,"file":"static/js/530.8c140519.chunk.js","mappings":"gNAEaA,EAAY,SAAC,GAA0C,IAAD,IAAvCC,MAASC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,SAChD,OACE,UAAC,IAAD,CAAKC,EAAG,EAAGC,GAAI,EAAGC,GAAG,YAArB,WACE,mCAAWL,GAASC,MACpB,sCAAcC,OAGnB,C,sECPYI,E,QAAgBC,GAAAA,QAAH,4C,SCAbC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OAAO,SAACH,EAAD,UAAgBG,GACxB,C,8ECSYC,GAAMH,EAAAA,EAAAA,IAAO,MAAPA,CACjBI,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,8ICpBWC,E,QAAUb,GAAAA,GAAH,qW,mBCAPc,EAAgB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC9B,OACE,+BACE,wBACGA,EAAeC,KAAI,SAAAxB,GAAK,OACvB,yBACE,SAACD,EAAAA,UAAD,CAAWC,MAAOA,KADXA,EAAMyB,GADQ,OAQhC,E,UCSD,EAjBa,WACX,OAA4BC,EAAAA,EAAAA,WAAS,iBAAM,EAAN,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,0FACCD,EADD,UACiBE,EAAAA,EAAAA,MADjB,4EAAD,EAGD,GAAE,KAGD,UAACrB,EAAA,EAAD,YACE,SAACY,EAAD,8BACA,SAACC,EAAD,CAAeK,OAAQA,MAG5B,C,oLCnBDI,IAAAA,SAAAA,QAAyB,gCAElB,IAAMD,EAAW,mCAAG,oGACEC,IAAAA,IAAU,qBAAsB,CACzDC,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,WAHA,cACnBC,EADmB,yBAMlBA,EAAaC,KAAKC,SANA,2CAAH,qDAsBXC,EAAY,mCAAG,WAAMd,GAAN,uFACDM,IAAAA,IAAA,gBAAmBN,GAAM,CAChDO,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,WAJY,cACpBC,EADoB,yBAOnBA,EAAWJ,MAPQ,2CAAH,sDAUZK,EAAmB,mCAAG,WAAMjB,GAAN,uFACRM,IAAAA,IAAA,gBAAmBN,EAAnB,YAAiC,CACxDO,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,WAJmB,cAC3BC,EAD2B,yBAO1BA,EAAWJ,MAPe,2CAAH,sDAUnBM,EAAmB,mCAAG,WAAOlB,GAAP,4FAAWmB,EAAX,+BAAkB,EAAlB,SACRb,IAAAA,IAAA,gBAAmBN,EAAnB,YAAiC,CACxDO,OAAQ,CACNC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,QACrBK,SAAU,QACVI,KAAAA,KAL6B,cAC3BH,EAD2B,yBAQ1BA,EAAWJ,KAAKC,SARU,2CAAH,qD","sources":["components/MovieItem/MovieItem.js","components/Section/SectionStyled.jsx","components/Section/Section.js","components/Styled/Box.js","pages/Home/HomeStyled.jsx","components/MoviesGallery/MoviesGallery.js","pages/Home/Home.js","services/movieApi.jsx"],"sourcesContent":["import { Box } from '../Styled/Box';\n\nexport const MovieItem = ({ movie: { title, name, overview } }) => {\n  return (\n    <Box p={3} mb={3} bg=\"lightgrey\">\n      <p>Title: {title || name}</p>\n      <p>Overview: {overview}</p>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding: 30px 0;\n`;","import { StyledSection } from './SectionStyled';\n\nexport const Section = ({ children }) => {\n  return <StyledSection>{children}</StyledSection>;\n};","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  shadow ,\n  position\n);","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  margin-bottom: 10px;\n  font-size: 70px;\n  font-weight: 600;\n  background-image: radial-gradient(\n    circle farthest-corner at 10.2% 55.8%,\n    rgba(252, 37, 103, 1) 0%,\n    rgba(250, 38, 151, 1) 46.2%,\n    rgba(186, 8, 181, 1) 90.1%\n  );\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n`;","import { MovieItem } from '../MovieItem/MovieItem';\n\nexport const MoviesGallery = ({ trendingMovies }) => {\n  return (\n    <>\n      <ul>\n        {trendingMovies.map(movie => (\n          <li key={movie.id}>\n            <MovieItem movie={movie} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};","import { useEffect, useState } from 'react';\nimport { getTrending } from '../../services/movieApi';\nimport { Heading } from './HomeStyled';\nimport { MoviesGallery } from '../../components/MoviesGallery/MoviesGallery';\nimport { Section } from '../../components/Section/Section';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(() => []);\n\n  useEffect(() => {\n    (async () => {\n      setMovies(await getTrending());\n    })();\n  }, []);\n\n  return (\n    <Section>\n      <Heading>Trending today</Heading>\n      <MoviesGallery movies={movies} />\n    </Section>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const trendingData = await axios.get('trending/movie/day', {\n    params: {\n      api_key: process.env.API_KEY,\n    },\n  });\n  return trendingData.data.results;\n};\n\nexport const searchMoviesByName = async movie => {\n  const foundMovies = await axios.get('search/movie', {\n    params: {\n      api_key: process.env.API_KEY,\n      query: movie,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return foundMovies.data.results;\n};\n\nexport const getMovieById = async id => {\n  const foundMovie = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getMovieCreditsById = async id => {\n  const foundMovie = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getReviewsByMovieId = async (id, page = 1) => {\n  const foundMovie = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: process.env.API_KEY,\n      language: 'en-US',\n      page,\n    },\n  });\n  return foundMovie.data.results;\n};"],"names":["MovieItem","movie","title","name","overview","p","mb","bg","StyledSection","styled","Section","children","Box","color","space","layout","flexbox","grid","background","border","shadow","position","Heading","MoviesGallery","trendingMovies","map","id","useState","movies","setMovies","useEffect","getTrending","axios","params","api_key","process","API_KEY","trendingData","data","results","getMovieById","language","foundMovie","getMovieCreditsById","getReviewsByMovieId","page"],"sourceRoot":""}